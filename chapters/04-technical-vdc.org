#+title: Technical VDC

* COMMENT
** TODO did we ever define RTEDs?
** TODO I don't think defn:situation-comparisons is necessary at all
I'm not convinced situations in general need to be included. we don't use them in the buffering/imagining proof now
** TODO s/X_r/X_e/g
** old proof for buffering and imagining
Based on the derivations above, it is clear that $\mu(x'_{c})$ maps to the observation space where
there is ambiguity as to the projection of $\assign(x_{c}) \in [l, u]$. We must also show that
$\mu(x'_{c})$ has mappings to the extrema of $\xi(x_{c})$. We start with the earliest
$\assign(x'_{c})$.

$$
\assign(x'_{c}) = l^+(x_{c}) = l + \gammabar^+(x_{c})
$$

We show that that this assignment of $\xi(x'_{c})$ can be modeled as the following observation in
$S$.

\begin{align*}
\obs(x_{c}) &\in [l + \gammabar^-(x_{c}), l + \gammabar^+(x_{c})] \\
\obs(x_{c}) &\in [l, l] + \Gamma(x_{c})
\end{align*}

It is possible that $\xi(x_{c}) = [l, l]$. As such, all observations in $\obs(x_{c})$ may share the
same execution strategy because the underlying temporal constraints depend on $\xi(x_{c})$, not
$\obs(x'_{c})$ or $\Gamma(x_{c})$. We may expand the range of the observation space when we map to
$S$ with $\mu(x'_{c})$.

\begin{align*}
\mu &: l^+(x_{c}) \rightarrow \omega_{v}(x_{c}) \\
\omega_{v}(x_{c}) &= [l + \gammabar^{-}(x_{c}), l + \gammabar^+(x_{c})]
\end{align*}

We see that $\mu$ has a valid observation space mapping to the minimum of the range of
$\omega_{v}(x_{c})$. We use the same argument for the maximum.

$$
\assign(x'_{c}) = u + \gammabar^-(x_{c})
$$

Observations anywhere in $[u + \gammabar^-(x_{c}), u + \gammabar^+(x_{c})]$ may share execution
strategies because, it is possible that in all cases, $\xi(x_{c}) = [u, u]$. We may then expand the
range of the observation space when we map to $S$.

\begin{align*}
\mu &: u^-(x_{c}) \rightarrow \omega_{v}(x_{c}) \\
\omega_{v}(x_{c}) &= [u + \gammabar^{-}(x_{c}), u + \gammabar^+(x_{c})]
\end{align*}

Thus, $\mu(x'_{c})$ maps to the maximum of the range of $\omega_{v}(x_{c})$. The transition creates
assignments in $S'$ that map to the entire $\omega_{v}(x_{c})$ in $S$.
** TODO fig:obs-assign needs the right variables
** TODO fix the tables in the experimental section!
** TODO figure numbering is messed up in the experimental section
** DONE copy in parts of the VDC experimental section!

- State "DONE"       from "TODO"       [2023-07-16 Sun 22:57]
* Consistency Checking of Temporal Constraint Networks with Uncertain Observation Delay
<<ch:modeling-tn>>

Our overarching aim in this Chapter is to architect the offline portions of a single-agent pipeline
that takes a temporal network with uncertain observation delay of exogenous events as input in order
to execute events in the real world within time windows that guarantee temporal consistency. Given
everything we know and do not know about the temporal relationship between events within and outside
of our control, this chapter will lay the groundwork that there exists an execution strategy that
guarantees all constraints are satisfied despite the uncertainty. The next chapter, Chapter
[[ch:delay-scheduling]], will provide accompanying online procedures for acting on said execution
strategy and dispatching events with real hardware (or by generally telling an agent what to do).

The three aims of this chapter are to

1. model temporal constraints with uncertain observation delay,
2. define a consistency (controllability) checking procedure for temporal networks with uncertain
   observation delay, and
3. prove that the execution strategy assumed by the controllability checking procedure is safe.

# and the interaction between scheduling components and dispatching components within an executive.
# Essentially, this chapter describes the process of single-agent execution with observation delay.

In Section [[sec:tn]], we address aim (1) by outlining the necessary definitions for modeling temporal
networks. Sections [[sec:fdc]] and [[sec:vdc]] describe our chosen model for temporal constraints with
uncertain observation delay, and address aim (2) by presenting a procedure for checking the
consistency thereof. Sections [[sec:fdc]] and [[sec:vdc]] are largely based on the work originally put forth
by Bhargava et. al., [cite:@Bhargava2018;@Bhargava2018a;@Bhargava2020;] with additional
contributions by us as highlighted below. Notably, Section [[sec:vdc]] addresses aim (3) by contributing
novel proofs that the execution strategy assumed to exist by Bhargava et. al. is safe. We conclude
with experimental analysis of our chosen consistency checking procedure in Section
[[sec:vdc-experimental]] using example temporal constraint networks inspired by lunar exploration.

# Section [[sec:dynamic-scheduling]] lays the ground work for scheduling with observation delay by
# describing relevant aspects of Hunsberger's FAST-EX dynamic scheduling algorithm
# [cite:@Hunsberger2016], which we build off of in section

** Temporal Networks
<<sec:tn>>
# largely copying this from our VDC paper

Temporal networks form the backbone of our architecture for temporal reasoning under observation
delay. Simple Temporal Networks (STNs) offer the basic building blocks for most expressive temporal
network formalisms [cite:@Dechter1991]. An STN is composed of a set of variables and a set of binary
constraints, each of which limits the difference between a pair of these variables; for example,
$B - A \in [10, 20]$. Each variable denotes a distinguished point in time, called an /event/.
Constraints over events are binary /temporal constraints/ that limit their temporal difference; for
example, the aforementioned constraint specifies that event $A$ must happen between 10 and 20
minutes before event $B$.

#+latex: \begin{defn}
*STN* [cite:@Dechter1991]

An /STN/ is a pair $\langle X, R \rangle$, where:
- $X$ is a set of variables, called events, each with a domain of the reals $\mathbb{R}$, and
- $R$ is a set of simple temporal constraints. Each constraint $\langle x_r, y_r, l_r, u_r \rangle$
  has scope $\{ x_r, y_r \} \subseteq X$ and relation $x_r - y_r \in [l_r, u_r]$.
#+latex:\end{defn}

#+latex: \begin{defn}
*Schedule* [cite:@MMV2001]

A /schedule/, $\assign$, is a mapping of events to times, $\assign : X \rightarrow \mathbb{R}$.
#+latex: \end{defn}

An STN is used to frame scheduling problems. A schedule is feasible if it satisfies each constraint
in $R$. We use the notation $\assign(x)$ to represent a mapping from an event, $x$, to a time, $x
\rightarrow \mathbb{R}$, in the schedule. A schedule is /complete/ if all $x \in X$ are assigned
times in $\assign$. An STN is /consistent/ if it has at least one feasible schedule that assigns all
events in $X$.

An STN is consistent if and only if there is no negative cycle in its equivalent distance graph
[cite:@Dechter1991]. Let $n$ be the number of events in a temporal network and $m$ to be the number
of constraints. Then consistency of an STN can be checked in $O(mn)$ time using the Bellman-Ford
Algorithm to check for negative cycles.

While an STN is useful for modeling problems in which an agent can control the exact time of all
events, it does not let us model actions whose durations are uncertain. A Simple Temporal Network
with Uncertainty (STNU) is an extension to an STN that allows us to model these types of uncertain
actions [cite:@Vidal1999].

#+label: def:stnus
#+latex: \begin{defn}
#+latex: \label{def:stnus}
*STNU* [cite:@Vidal1999]

An /STNU/ $S$ is a quadruple $\langle X_e, X_c, R_r, R_c \rangle$, where:
- $X_e$ is the set of executable events with domain $\mathbb{R}$,
- $X_c$ is the set of contingent events with domain $\mathbb{R}$,
- $R_r$ is the set of requirement constraints of the form $l_r \leq x_r - y_r \leq u_r$, where $x_r,
  y_r \in X_c \cup X_e$ and $l_r, u_r \in \mathbb{R}$, and
- $R_c$ is the set of contingent constraints of the form $0 \leq l_r \leq c_r - e_r \leq u_r$, where
  $c_r \in X_c$, $e_r \in X_e$ and $l_r, u_r \in \mathbb{R}$.
#+latex: \end{defn}

An STNU divides its events into executable and contingent events and divides its constraints into
requirement and contingent constraints. The times of executable events are under the control of an
agent, and assigned by its scheduler. STNU executable events are equivalent to events in an STN.
Contingent events are controlled by Nature. Contingent constraints model the temporal outcomes of
uncertain actions and are enforced by Nature. Contingent constraints relate a starting executable
event and an ending contingent event. To ensure causality, the lower-bound of a contingent
constraint is required to be non-negative; hence, the end event of the constraint follows its start
event. Contingent constraints are not allowed to be immediately followed by additional contingent
constraints. Requirement constraints specify constraints that the scheduler needs to satisfy and may
relate any pair of events. An STNU requirement constraint is equivalent to an STN constraint.

To clarify terminology, we sometimes refer to contingent constraints as contingent links and
requirement constraints as requirement links. We also sometimes use the term /free/ instead of
requirement to describe executable events and constraints. When we discuss contingent constraint or
contingent link duration, we refer to the amount of time that actually elapses between a contingent
link's starting executable event and its ending contingent event. We sometimes refer to STNUs as
defined in Defintion [[def:stnus]] as /vanilla/ STNUs (in contrast to the many "flavors" of STNUs,
namely the variants with fixed and variable observation delay functions as will be defined in
Sections [[sec:fdc]] and [[sec:vdc]] respectively).

With STNs, our goal is to construct a consistent schedule for all events such that all constraints
are satisfied. In STNUs, however, contingent events cannot be scheduled directly. Instead, we are
interested in determining whether there is a /controllable/ execution strategy that guarantees that
a schedule can be constructed such that all constraints are satisfied despite how uncertainty is
resolved.

#+latex: \begin{defn}
*Situations* [cite:@Vidal1999]

For an STNU $S$ with $k$ contingent constraints $\langle e_{1}, c_{1}, l_{1}, u_{1} \rangle, \cdots,
\langle e_{k}, c_{k}, l_{k}, u_{k} \rangle$, each \textit{situation}, $\omega$, represents a
possible set of values for all links in $S$, $\omega = (\omega_{1}, \cdots, \omega_{k}) \in \Omega$.
The \textit{space of situations} for $S$, $\Omega$, is $\Omega = [e_{1}, c_{1}] \times \cdots \times
[e_{k}, c_{k}]$.
#+latex: \end{defn}

Each /situation/ in the /space of situations/, $\omega \in \Omega$, represents a different
assignment of contingent links in the schedule [cite:@Vidal1999]. We may represent the situation for
a specific constraint as $\omega_{i}$ for the i-th constraint in $S$, or $\omega(x_{c})$ for
contingent event $x_{c}$.

# Situations are sets of intervals. To examine spaces of situations, we can
# make the following comparisons.

# # TODO what if j = 1 or j = k for the second item?
# # TODO reread hunsberger and make sure this makes sense re: use of \omega

# #+label: defn:situation-comparisons
# #+latex: \begin{defn}
# #+latex: \label{defn:situation-comparisons}
# *Comparisons of Spaces of Situations*

# Given two spaces of situations, $\Omega_{1}$ and $\Omega_{2}$, with contingent link $j$, $1 \leq j
# \leq k$,
# - $\Omega_{1} = \Omega_{2}$ if and only if $\omega_{1} = \omega_{2} \forall \omega_{1} \in
#   \Omega_{1} \forall \omega_{2} \in \Omega_{2}$
# - $\Omega_{1} \subset \Omega_{2}$ if situation $j$ in $\Omega_{1}$ is a subset of situation $j$ in
#   $\Omega_{2}$, $\omega_{1j} \subset \omega_{2j}$, and all other situations are equivalent
# - $\Omega_{1} \subset \Omega_{2}$ if $\Omega_{1}$ omits contingent link $j$, e.g. $\displaystyle
#   \Omega_{1} = \prod^{k}_{\substack{i=1 \\ i \neq j}} [e_{1i}, c_{1i}]$, and all other situations
#   are equal.
# #+latex: \end{defn}

# $\Omega_{1} = [e_{1}, c_{1}] \times \cdots [e_{j - 1}, c_{j - 1}] \times \cdots [e_{j+1}, c_{j+1}] \times \cdots \times [e_{k}, c_{k}]$

Situations may be applied to STNUs.

#+latex: \begin{defn}
*Projection* [cite:@Vidal1999;@MMV2001]

A /Projection/ is an application of a situation, \omega, on an STNU $S$, which collapses the
durations of contingent links to specific durations resulting in an STN.
#+latex: \end{defn}

A /projection/ is an STN that is the result of applying a situation to an STNU, and thus the
contingent links have reduced from uncertain ranges to specific durations
[cite:@Vidal1999;@MMV2001].

#+latex: \begin{defn}
*Execution Strategy*

An /execution strategy/, $\mathcal{S}$, is a mapping of situations to schedules,
$\mathcal{S}~:~\Omega \rightarrow \Xi$.
#+latex: \end{defn}

An /execution strategy/ then naturally maps a specific resolution of the uncertainty of the
contingent constraints to a set of assignments for the events of an STNU. For an STNU, time
monotonically increases and we only observe /activated/ contingent events, or those contingent
events at the tail of a contingent link whose free event predecessor has been executed. As such, we
modify our definition of $\assign$.

#+latex: \begin{defn}
*Partial Schedule*

A /partial schedule/, $\assign$, is a mapping from a proper subset of events in an STNU, $X'
\subseteq X_{e} \cup X_{c}$, to times, $\assign~:~X' \rightarrow \mathbb{R}$.
#+latex: \end{defn}

As a proper subset, $\assign$ represents an assignment of events /so far/ during the execution of an
STNU. From here on, $\assign$ refers to a partial schedule. If $X' = X_{e} \cup \X_{c}$, then the
schedule is complete.

To determine whether an STNU is controllable, we determine whether there exists a /valid/ execution
strategy for it.

#+latex: \begin{defn}
*Valid Execution Strategy*

A /valid/ $\mathcal{S}$ is one that enforces that, for any $\omega_{f} \in \Omega_{f}$, the
outputted decision respects all existing temporal constraints and ensures the existence of a
subsequent valid execution strategy following that action.
#+latex: \end{defn}

In the world of STNU literature, there are many forms of controllability that represent the ability
of a scheduler to enact execution strategies that satisfy constraints under different conditions
[cite:@Vidal1999]. Three forms of controllability, /strong/, /weak/, and /dynamic/ are studied most
often, though in practice we omit weak controllability from our analysis. A temporal network is
/strongly controllable/ (or exhibits strong controllability), if there exists a complete schedule
that will satisfy all constraints for all projections of the STNU. A temporal network exhibits
dynamic controllability if an execution strategy exists for a given partial schedule. As we will see
below, variable-delay controllability, used to check the consistency of temporal networks with
uncertain observation delay, will unify strong and dynamic controllability into a single theory. But
first, we describe fixed-delay controllability, which introduces known observation delay to STNUs.

** Fixed-Delay Controllability
<<sec:fdc>>

Under fixed-delay controllability (FDC) [cite:@Bhargava2018a], we consider the problem of scheduling
execution decisions when the assignment of values to contingent events is learned after some time
has passed from the initial assignment, if ever. Fixed-delay controllability uses a /fixed-delay
function/ to encode the delay between when an event occurs and when it is observed by a scheduling
agent. We sometimes refer to an STNU with an associated fixed-delay function as a /fixed-delay
STNU/.

# We prefer this model because it is flexible enough to model most forms of event observation we would
# expect to see in a real-time execution context.

#+latex: \begin{defn}
*Fixed-Delay Function* [cite:@Bhargava2018a]

A /fixed-delay function/, $\gamma: X_c \rightarrow \mathbb{R}^+ \cup \{\infty\}$, maps a contingent
event to the amount of time that passes between when the event is assigned and when its value is
observed.
#+latex: \end{defn}

As a matter of convention, we use $\edge{A}{B}{[l, u]}$ to represent requirement links between
events $A$ and $B$ and use $\conedge{A}{E}{[l, u]}$ to represent contingent links between $A$ and
$E$. When we refer to the fixed-delay function associated with a contingent event $E$ of some
contingent constraint $\conedge{A}{E}{[l, u]}$, we use the notation $\gamma(E)$, or equivalently,
$\gamma_{E}$. Without instantaneous observation of contingent events, we must clarify the
relationship between when an event is assigned and when it is /observed/.

#+latex: \begin{defn}
*Contingent Event Observation*

/Observations/, $\obs$, are a mapping from contingent events to times when the agent receives
knowledge the event has been assigned, $\obs~:~X_{c} \rightarrow \mathbb{R}$. An observation of an
event, $x_{c}$, follows the relationship, $\obs(x_{c}) = \assign(x_{c}) + \gamma(x_{c})$.
#+latex: \end{defn}

We also present a revised definition of situations, $\Omega_{f}$, to reflect the impact of the delay
function on event observations.

#+label: defn:omega-f
#+latex: \begin{defn}
#+latex: \label{defn:omega-f}
*Fixed-Delay Situations*

For an STNU $S$ with $k$ contingent constraints $\langle e_{1}, c_{1}, l_{1}, u_{1} \rangle, \cdots,
\langle e_{k}, c_{k}, l_{k}, u_{k} \rangle$ and fixed-delay function $\gamma$, each
\textit{fixed-delay situation}, $\omega_{f}$, represents a possible set of \textit{observed} values
for all links in $S$, $\omega_{f} = (\omega_{f1}, \cdots, \omega_{fk})$. The \textit{space of
situations} for $S$, $\Omega_{f}$, is $\Omega_{f} = [e_{1}, c_{1}] + [\gamma_{1}, \gamma_{1}] \times
\cdots \times [e_{k}, c_{k}] + [\gamma_{k}, \gamma_{k}]$.
#+latex: \end{defn}

To emphasize that the /observed/ value for an event is not the same as its assignment, we also use
the term /observation space/ as a synonym for the space of situations.

#+latex: \begin{defn}
*Valid, Fixed-Delay Execution Strategy*

A /valid/ $\mathcal{S}$ for a fixed-delay STNU is one that enforces that, for any $\omega_{f} \in
\Omega_{f}$, while receiving observations of contingent events after a known and fixed delay, the
outputted decision respects all existing temporal constraints and ensures the existence of a
subsequent valid execution strategy following that action.
#+latex: \end{defn}

With the semantics of delayed observations in hand, we can define what it means for a fixed-delay
STNU to be controllable.

# Note that our choice to include an infinite delay allows us to model that certain events are
# unobservable. While there are approaches that allow unobservable events and their constraints to be
# compiled directly into a network \cite{vidal:controllability,zavatteri:strong}, decoupling
# observation models from the events themselves makes it easy to evaluate controllability across
# different observation models and to directly compare those models when agents have flexibility in
# deciding when to communicate \cite{bhargava:communication-costs}.

#+latex: \begin{defn}
*Fixed-Delay Controllability* [cite:@Bhargava2018a]

An STNU $S$ is /fixed-delay controllable/ with respect to a delay function, \gamma, if and only if
for the space of situations, $\Omega_{f}$, there exists a valid, fixed-delay execution strategy,
$\mathcal{S}$, that will construct a satisfying schedule for all requirement constraints during
execution.
#+latex: \end{defn}

Importantly, fixed-delay controllability (FDC) generalizes the two concepts of controllability that
are central to STNUs, strong and dynamic controllability. In particular, by using a fixed-delay
function where we observe all events instantaneously, e.g. $\gamma(x_{c}) = 0 \forall x_{c} \in
X_{c}$, checking fixed-delay controllability reduces to checking /dynamic controllability/.
Similarly, a fixed-delay function that specifies we never observe any contingent events, e.g.
$\gamma(x_{c}) = \infty \forall x_{c} \in X_{c}$, corresponds to checking /strong controllability/
[cite:@Vidal1999].

As is the case for a vanilla STNU, evaluating whether a valid execution strategy exists for a
fixed-delay STNU reduces to checking for the presence of a /semi-reducible negative cycle/ in a
/labeled distance graph/ derived from the fixed-delay STNU [cite:@Morris2006]. The key insight for
checking fixed-delay controllability is the inclusion of a fixed-delay function in the constraint
generation rules for building the labeled distance graph [cite:@Bhargava2018a].

The labeled distance graph corresponds to the constraints of the STNU with each unlabeled edge from
$A$ to $B$ with weight $w$ (denoted $\edge{A}{B}{w}$) representing the inequality $B - A \leq w$.
Labeled edges represent conditional constraints that apply depending on the realized value of
contingent links in the graph. For example, a lower-case labeled edge from $A$ to $B$ with weight
$w$ and lower-case label $c$ (denoted $\edge{A}{B}{c:w}$) indicates that $B - A \leq w$ whenever the
contingent link ending at $C$ takes on its lowest possible value. An upper-case labeled edge from
$A$ to $B$ with weight $w$ and upper-case label $C$ (denoted $\edge{A}{B}{C:w}$) indicates that $B -
A \leq w$ whenever the contingent link ending at $C$ takes on its highest possible value. Given a
labeled distance graph, there are several valid derivations we can apply to generate additional
edges (see Table [[table:delay-reductions]]). If it is possible to derive a negative cycle that is free
of lower-case edges, then the STNU has a /semi-reducible negative cycle/ and the STNU is not
controllable.

Note that with fixed-delay controllability, the lower-case and cross-case rules are modified from the
Morris and Muscettola [cite:@Morris2005], accounting for $\gamma$. More specifically, we address the
case where observation delay makes it impossible to receive information about a contingent event
before its immediate successor. More detail can be found in [cite:@Bhargava2018b].

# TODO why is the caption not showing up? check against others
#+label: table:delay-reductions
#+latex: \begin{table}[htb]
#+latex: \label{table:delay-reductions}
#+latex: \centering
#+latex: \begin{tabular}{ |P{3.4cm}||P{3.5cm}|P{4cm}|P{2.5cm}|  }
#+begin_export latex
 \hline
 \multicolumn{4}{|c|}{\textbf{Edge Generation Rules}} \\
 \hline
 & Input edges & Conditions & Output edge\\
 \hline
 No-Case Rule & $\edge{A}{B}{u}$, $\edge{B}{C}{v}$ & N/A & $\edge{A}{C}{u+v}$\\
 \hline
 Upper-Case Rule & $\edge{A}{D}{u}$, $\edge{D}{B}{C:v}$ & N/A & $\edge{A}{B}{C:u+v}$\\
 \hline
 Lower-Case Rule & $\edge{A}{C}{c:x}$, $\edge{C}{D}{w}$ & $w < \gamma(C)$, $C \neq D$ & $\edge{A}{D}{x+w}$\\
 \hline
 Cross-Case Rule & $\edge{A}{C}{c:x}$, $\edge{C}{D}{B:w}$ & $w < \gamma(C)$, $B \neq C \neq D$ & $\edge{A}{D}{B:x+w}$\\
 \hline
 Label Removal Rule & $\edge{B}{A}{C:u}$, $\conedge{A}{C}{[x,y]}$ & $u > -x$ & $\edge{B}{A}{u}$\\
 \hline
\end{tabular}
#+end_export
#+latex: \caption{Edge generation rules for a labeled distance graph derived from a fixed-delay STNU.}
#+latex: \end{table}

We generalize fixed-delay to variable-delay controllability next.

** Variable-Delay Controllability
<<sec:vdc>>

While fixed-delay controllability is quite expressive, its fundamental limitation is that it assumes
that contingent event assignments, even those made after a fixed delay, are always known. If
uncertainty in observation delay, and thus uncertainty in contingent event assignment, is added to
the model, then we are forced to decide when to act despite imperfect knowledge of the partial
history.

# To reiterate, with variable observation delay, we no longer guaranteed to learn the true time when
# contingent events were assigned.

We now introduce this model in terms of definitions for a /variable-delay function/ and
/variable-delay controllability/ (VDC) checking as applied to /variable-delay STNUs/. Since
variable-delay semantics generalizes the notion of fixed-delay, as a matter of convenience, we also
use the simplified term /delay STNUs/ to refer to STNUs with variable observation delay. VDC was
originally presented by Nikhil Bhargava [cite:@Bhargava2018]. However, we contributed significant
improvements of the lemmas and proofs herein, including the addition of novel visual depictions of
VDC, in our role as a coauthor with Bhargava on a journal article on the topic of VDC that was
submitted to the /Journal of AI Research/.

This section formalizes the definition of VDC, which is required to explain the procedure of
checking VDC in Section [[sec:vdc-to-fdc]].

#+latex: \begin{defn}
*Variable-Delay Function*

A /variable-delay function/, $\gammabar: X_c \rightarrow (\mathbb{R}^+ \cup \{\infty\}) \times
(\mathbb{R}^+ \cup \{\infty\})$, maps a contingent event, $x_{c}$, to an interval $[a, b]$, where $a
\leq b$. The interval bounds the time that passes after $\assign(x_{c})$ before that value is
observed to be assigned. No prior knowledge is assumed about the distribution associated with this
interval.
#+latex: \end{defn}

Importantly, this model does not assume that an executing agent may be able to infer /when/ a
contingent event was executed. Instead, our model only infers /that/ the event was executed. Like
the resolution of contingent constraints, the resolved value of $\gammabar(x_{c})$ will be selected
by Nature during execution. Thus, the timing of when an agent receives an observation is a function
of the independent resolutions of the contingent link and variable-delay function.

By convention, we use $\gammabar^-(x_c)$ and $\gammabar^+(x_c)$ to represent the lower-bound and
upper-bound, respectively, of the range representing the possible delay in observation, i.e.
$\gammabar(x_{c}) \in [\gammabar^{-}(x_{c}), \gammabar^{+}(x_{c})]$.

# TODO I'm pretty sure this is mentioned later! don't need it here.
# For any fixed-delay function $\gamma$, we can produce a corresponding variable-delay function
# $\gammabar$ where $\gammabar^+(x_{c}) = \gammabar^-(x_{c}) = \gamma(x_c)$.

#+latex: \begin{defn}
*Observation Projection*

The /observation projection/ $\Gamma$ is a mapping from a contingent event to a fixed observation
delay, $\Gamma~:~X_{c} \rightarrow \mathbb{R} \in [\gammabar^{-}(X_{c}), \gammabar^{+}(X_{c})]$.
#+latex: \end{defn}

During execution, the /observation projection/, $\Gamma$, represents the resolution of observation
delay. Much like how a projection collapses a vanilla STNU to an STN, the observed projection
collapses a contingent link with variable-observation delay to one with fixed-observation delay.
However, unlike the projection of an STNU, the observation projection is not guaranteed to be
learned. We update our definitions of $\obs$, $\xi$, and $\Omega$ accordingly.

#+label: defn:vdc-obs
#+latex: \begin{defn}
#+latex: \label{defn:vdc-obs}
*Contingent Event Observation*

/Contingent event observations/, $\obs$, are a mapping from contingent events to times when the
agent receives events, $\obs~:~X_{c} \rightarrow \mathbb{R}$, based on the relationship,
$\obs(x_{c}) = \xi(x_{c}) + \Gamma(x_{c})$.
#+latex: \end{defn}

Determining a real-valued mapping of a contingent event to the value of its assignment, i.e. its
schedule or $\assign(x_{c})$, is no longer guaranteed due to an interval bounded $\Gamma(x_{c})$. We
must use interval-bounded contingent event assignments instead.

# TODO we already defined schedule!

#+label: def:schedule-as-interval
#+latex: \begin{defn}
#+latex: \label{def:schedule-as-interval}
*Schedule*

A /schedule/, $\assign$, when applied to contingent events, is a mapping of events to
interval-bounded times, $\assign : X_{c} \rightarrow (\mathbb{R}^+ \cup \{\infty\}) \times
(\mathbb{R}^+^+ \cup \{\infty\})$, where, for any contingent constraint, $0 \leq l_r \leq c_r - e_r
\leq u_r$, ending in contingent event $x_{c}$, $\assign(x_{c}) \in [l + \gammabar^{-}(x_{c}), u +
\gammabar^{+}(x_{c})]$.
#+latex: \end{defn}

We sometimes use interval bounded schedules for requirement events as well. For a requirement
constraint $l_r \leq x_r - y_r \leq u_r$ ending in requirement event $x_{e}$, $\assign(x_{e}) = t
\in [l_{r}, u_{r}]$ for some time $t$.

We once again revise our definition of situations, $\Omega_{v}$, to reflect the impact of the
variable-delay function on the space of observations.

# TODO we may need a history of observations

#+label: def:omega-v
#+latex: \begin{defn}
#+latex: \label{def:omega-v}
*Variable-Delay Situations*

For an STNU $S$ with $k$ contingent constraints $\langle e_{1}, c_{1}, l_{1}, u_{1} \rangle, \cdots,
\langle e_{k}, c_{k}, l_{k}, u_{k} \rangle$ and variable-delay function $\gammabar$, each
\textit{variable-delay situation}, $\omega_{v}$, represents a possible set of \textit{observed}
values for all links in $S$, $\omega = (\omega_{v1}, \cdots, \omega_{vk})$. The \textit{space of
situations} for $S$, $\Omega_{v}$, is $\Omega_{v} = [e_{1}, c_{1}] + [\gammabar^{-}_{1},
\gammabar^+_{1}] \times \cdots \times [e_{k}, c_{k}] + [\gammabar^{-}_{k}, \gammabar^+_{k}]$.
#+latex: \end{defn}

We see that the space of observations has likewise grown in the transition to variable observation
delay. If $\gammabar^{-} < \gammabar^{+}$, $\Omega_{v}$ for variable observation delay is strictly
larger than $\Omega_{f}$ for fixed-observation delay and $\Omega$ for vanilla STNUs.

Like the fixed-delay function for fixed-delay controllability, the variable-delay function relates
an observation delay to a contingent event, independent of other events. We take a similar approach
to defining variable-delay controllability, relative to fixed-delay controllability.

#+name: def:vdc
#+latex: \begin{defn}
#+latex: \label{def:vdc}
*Variable-Delay Controllability*

An STNU $S$ is /variable-delay controllable/ with respect to a variable-delay function, $\gammabar$,
if and only if for the space of situations, $\Omega_{v}$, there is an $\mathcal{S}$ that produces a
satisfying schedule for requirement events during execution, $\xi$.
#+latex: \end{defn}

# Variable-delay controllability, VDC, is a generalization of fixed-delay controllability.

# It is important to recognize that with VDC, we lose the guarantee that we can learn the exact
# assignment of $x_{c}$. The only information we have is the time of our observation of $x_{c}$, which
# is the summation of the resolution of $x_{c}$ and the resolution of the $\gammabar$ function.

# TODO awk. just want to say that VDC checking and scheduling necessarily follow the same principles
# laid out in the Lemmas
# In order to guarantee that our real-time execution decisions maintain consistency with respect to
# the modeled variable-delay STNU, our online scheduler needs to be consistent with the expectations
# for scheduling laid out in the variable-delay controllability checking procedure, which we will
# document during our discussion of delay scheduling in Section [[sec:delay-scheduling]].

Determining whether a given variable-delay STNU, $S$, is variable-delay controllable has two
components [cite:@Bhargava2018]. The first is to derive a fixed-delay STNU, $S'$, with
fixed-observation delay, $\gamma$, that is equivalent with respect to controllability. The second is
to show that $S'$ is fixed-delay controllable. Below, we reiterate the claims of
[cite:@Bhargava2018], demonstrating how to derive $S'$ from $S$ that is equivalent with respect to
controllability. In Section [[sec:vdc-to-fdc]], we first demonstrate how to transform the contingent
links from $S$ to $S'$, and demonstrate their correctness with respect to observation spaces, before
following up with transformations to the requirement links to maintain the same scheduling semantics
in $S'$.

# TODO finish this. or move to to start of next section

*** Variable-Delay to Fixed-Delay Transformations
<<sec:vdc-to-fdc>>

# TODO maybe put pipeline diagram here?

We now show how we transform a variable-delay STNU to a fixed-delay STNU in order to perform
fixed-delay controllability checking.

For the following lemmas, let $x_{c}$ be a contingent event in $S$ and variable-delay function
$\gammabar(x_{c})$. Let $x'_{c}$ be the transformed contingent event in $S'$ with fixed-delay
function, $\gamma(x'_{c})$.

# TODO replace g(x_c), a(x_c), o(x_c) with the real variables in the fig
#+label: fig:obs-assign
#+attr_latex: :width 3.5in
#+caption: We visualize the relationship between realized assignments across $S$ and $S'$. In this example, each horizontal line is a timeline monotonically increasing from left to right. Dashed lines represent observation delays. We see how an assignment in $S$, $\assign(x_{c})$, realized observation delay, $\Gamma(x_{c})$, and an observation in $S$, $\obs(x_{c})$, contribute to an assignment in $S'$, $\assign(x'_{c})$.
[[file:../images/viz-eqn-obs-assign.png]]

Note that we receive $\obs(x_{c})$ from Nature, but make the assignment $\xi(x'_{c})$ in the
dispatchable form of $S'$. To be clear, while $\assign(x_{c})$ is an interval, $(\mathbb{R} \cup
\infty) \times (\mathbb{R} \cup \infty)$, $\assign(x'_{c})$ is in $\mathbb{R}$. For a fixed
interval, e.g. $\obs(x_{c}) \in [t, t]$, we sometimes employ an equivalent representation,
$\assign(x_{c}) = t$.

# #+name: eqn:obs-assign
# #+begin_export tex
# \begin{align}
# \obs(x_{c}) &\in \assign(x_{c}) + \gammabar(x_{c}) \\
# \obs(x_{c}) &\in [l, u] + [\gammabar^-(x_{c}), \gammabar^+(x_{c})] \label{eqn:obs-assign}
# \end{align}
# #+end_export

# See Figure [[fig:obs-assign]] for a visualization of Equation [[eqn:obs-assign]].


# TODO switch to ~obs(x_c)~ and ~assign(x_c)~? instead?

# TODO next two paragraphs say the same thing?
# Before we begin, we need to introduce new notation to describe assignments and observations /during
# scheduling/. Asserting \assign(x_{c}) = y$, where $y \in [l, u]$, means that $x_{c}$ has been assigned to
# $y$ in $S$. For a contingent event $x'_{c} \in S'$, let \assign(x'_{c})$ be the time recorded in AllMax.
# Let $\obs(x_{c})$ be an observation of a contingent event, $x_{c} \in X_{c}$.

# When, during execution, we learn $\obs(x_{c})$, we may represent it as a fixed-bounded range, eg.
# $\obs(x_{c}) \in [t, t]$ for some $t$, $l \leq t \leq u$. We can then use a fixed-bounded $\obs(x_{c})$ to
# narrow the ranges of \assign(x_{c})$ and $g(x_{c})$ using Equation [[eqn:obs-assign]]. This relationship will
# be key for variable-delay STNU scheduling, described in Section [[sec:delay-scheduling]].

Additionally, we sometimes apply $-$ and $+$ superscripts to $l$ and $u$ to denote the earliest and
latest times respectively that an assignment at those bounds could be observed. For instance, the
relationship in Definition [[defn:vdc-obs]] simplifies to,

#+label: eqn:obs-assign
\begin{align}
\label{eqn:obs-assign}
\obs(x_{c}) &= [l + \gammabar^-(x_{c}), u + \gammabar^+(x_{c})] \\
\obs(x_{c}) &= [l^-(x_{c}), u^+(x_{c})]
\end{align}

Lastly, we need a means to compare observation spaces if we are to transform variable-delay to
fixed-delay STNUs.

#+latex: \begin{defn}
*Observation Space Mapping*

Let $\mu$ be a mapping from an assignment to a situation, $\mu : \xi \rightarrow \omega$. To say
that $\mu(x'_{c}) \subseteq \omega_{v}(x_{c})$ means that, for any assignment of $x'_{c}$ in $S'$,
there is an equivalent situation in $S$ for $x_{c}$.
#+latex: \end{defn}

For the transitions below, it is a /valid observation space mapping/, if we can show that
$\mu(x'_{c}) \subseteq \omega_{v}(x_{c})$. If so, it is guaranteed that any assignment in the
observation space of $x'_{c}$ also has a valid assignment in the observation space of $x_{c}$.

We now have the necessary vocabulary and notation to step through the transformations from $S$ to
$S'$. These lemmas were first presented in [cite:@Bhargava2018], with some refinement by us for the
aforementioned journal article submission.

# TODO, make sure this is the right defn!

# TODO, I don't know if this makes sense...
# TODO do we say we can map from \Omega_f back to \Omega_v? I think that's more important than being a subset. maybe we say \Omega_f captures all of \Omega_v?
#+latex: \begin{defn}
*Variable-Delay to Fixed-Delay Transformations*

The /variable-delay to fixed-delay transformations/ define a set of observation space mappings,
where there are valid observation space mappings for all the contingent constraints in $S'$ to $S$.
#+latex: \end{defn}

Thus, if there is a satisfying $\mathcal{S}$ for the fixed-delay observation space of $S'$, it is guaranteed to
simultaneously satisfy any situation in the variable-delay observation space, $\Omega_{v}$, of $S$.

# identifying when we need to reconcile observations from $S$ with the dispatchable form from $S'$,
# and how we do so.

# TODO something about assignments in $S'$ constraining assignments in $S$?

#+label: lemma:emulating-fixed
#+latex: \begin{lemma}
#+latex: \label{lemma:emulating-fixed}
For any contingent event $x_c \in X_c$ in $S$, if $\gammabar^-(x_c) = \gammabar^+(x_c)$, we emulate
$\gammabar(x_c)$ in $S'$ using $\gamma(x'_c) = \gammabar^+(x_c)$.
#+latex: \end{lemma}

#+latex: \begin{proof}
We translate an already fixed-bounded observation delay in the form of $\gammabar(x_{c})$ to the
equivalent fixed-delay function, $\gamma(x'_{c})$, thus $\omega_{f}(x'_{c}) = \omega_{v}(x_{c})$.
#+latex: \end{proof}

#+label: lemma:partially-unobservable
#+latex: \begin{lemma}
#+latex: \label{lemma:partially-unobservable}
For any contingent event $x_c \in X_c$, $\gammabar^+(x_c) = \infty$, we emulate $\gammabar(x_c)$ in
$S'$ as $\gamma(x'_c) = \infty$.
#+latex: \end{lemma}

#+latex: \begin{proof}
There are projections where we would not receive information about $x_{c}$, therefore we have to act
as if we /never/ receive an observation of $x_{c}$. Any $\mathcal{S}$ that works when we do not
receive information about $x_{c}$ would also work when do receive an observation if we choose to
ignore the observation.

None of our decisions depend on $\xi(x'_{c})$, thus no observation space mapping to $S$ is
necessary.
#+latex: \end{proof}

#+label: fig:lemmas-combined
#+caption: A visualization of the lemmas used to transform contingent links with variable observation delay and subsequent requirement links.
[[file:../images/lemmas-combined.png]]

#+label: lemma:not-enough-information
#+latex: \begin{lemma}
#+latex: \label{lemma:not-enough-information}
If $u - l \leq \gammabar^+(x_c) - \gammabar^-(x_c)$, we emulate $\gammabar(x_c)$ in $S'$ using
$\gamma(x'_c) = \infty$.
#+latex: \end{lemma}

#+latex: \begin{proof}
We can ignore observations of $x_{c}$ because they are not guaranteed to narrow where $\assign(x_c)$
was assigned in the range $[l, u]$.

Let $\alpha$ be the range of $\obs(x_{c})$ when $\assign(x_{c}) \in [l, l]$. Let $\beta$ be the
range of $\obs(x_{c})$ when $\assign(x_{c}) \in [u, u]$. By Equation [[eqn:obs-assign]],

\begin{align*}
\alpha &= [l^-(x_{c}), l^+(x_{c})] \\
\beta &= [u^-(x_{c}), u^+(x_{c})]
\end{align*}

We can show that $u^-(x_{c}) \leq l^+(x_{c})$.

\begin{align*}
u - l &\leq \gammabar^+(x_c) - \gammabar^-(x_{c}) \\
u + \gammabar^-(x_{c}) &\leq l + \gammabar^+(x_{c}) \\
u^-(x_{c}) &\leq l^+(x_{c})
\end{align*}

The lower bound of $\beta$ is less than the upper bound of $\alpha$, thus $\alpha \cap \beta$. An
observation $\obs(x_{c}) \in [u^-(x_{c}), l^+(x_{c})]$ could be the result of $\assign(x_{c}) = [l,
l]$, $\assign(x_{c}) = [u, u]$, or any value $\assign(x_{c}) \in [l, u]$. Observations provide no
information about the underlying contingent constraint, therefore we ignore $\obs(x_{c})$.

None of our decisions depend on $\xi(x'_{c})$, thus no observation space mapping to $S$ is
necessary.
#+latex: \end{proof}

#+label: lemma:main-tightening
#+latex: \begin{lemma}
#+latex: \label{lemma:main-tightening}
If $u - l > \gammabar^+(x_c) - \gammabar^-(x_c)$, we can emulate $\gammabar(x_c)$ under minimal
information by replacing the bounds of $x_c$ with $x'_{c} \in [l^+(x_{c}), u^-(x_{c})]$ and letting
$\gamma(x'_c) = 0$.
#+latex: \end{lemma}

#+latex:\begin{proof}
Under Lemma [[lemma:main-tightening]], observations $\obs(x_{c})$ are guaranteed to narrow the range of
$\assign(x_{c})$.

We have the same ranges for $\alpha$ and $\beta$ as in Lemma [[lemma:not-enough-information]], however
we can show that $u^-(x_{c}) \geq l^+(x_{c})$ instead.

\begin{align*}
u - l &\geq \gammabar^+(x_c) - \gammabar^-(x_{c}) \\
u + \gammabar^-(x_{c}) &\geq l + \gammabar^+(x_{c}) \\
u^-(x_{c}) &\geq l^+(x_{c})
\end{align*}

Thus, receiving an observation is guaranteed to narrow the derived range of $\assign(x_{c})$. The
transformation tightens the range of $x'_{c}$ to one where there is maximum ambiguity of the
assignment of $x_{c}$ while guaranteeing an execution strategy for any assignment of $x_{c} \in [l,
u]$.
#+latex: \end{proof}

# TODO use this?
# In order for $S$ to be variable-delay controllable, there must be an execution strategy for /any/
# $\assign(x_{c})$ consistent with $\assign(x_{c}) + \gammabar(x_{c}) = [l^+(x_{c}), l^+(x_{c})]$.

# TODO copy parts of the proof from the VDC paper?

# By Definition [[defn:omega-f]], $\Omega_{f} = [l^{\+}_{1}, u^{-}_{1}] \times \cdots \times [l^{\+}_{k},
# u^{-}_{k}]$, thus $\Omega_{f} \subset \Omega_{v}$.

After applying Lemma [[lemma:main-tightening]], despite the limited expected range of assignments in
$x'_{c}$ in $S'$ compared to $x_{c}$ in $S$, we can show that Lemma [[lemma:applied-execution]]
guarantees a satisfying schedule for any $\obs(x_{c}) \in [l^-(x_{c}), u^+(x_{c})]$ using an
$\mathcal{S}$ that employs /buffering/ and /imagining/ contingent events.

#+latex: \begin{defn}
*Buffering*

/Buffering/ a contingent event $x_{c}$ is an execution strategy where, if $x_{c}$ is observed
earlier than the lower bound of the observation space $\obs(x_{c}) < \omega_{f}^-(x'_{c})$, we
assign $\xi(x'_{c})$ to the lower bound of the observation space, $\xi(x'_{c}) =
\omega_{f}^-(x'_{c})$.
#+latex: \end{defn}

#+latex: \begin{defn}
*Imagining*

/Imagining/ a contingent event $x_{c}$ is an execution strategy where, if $x_{c}$ is observed later
than the upper bound of the observation space, $\obs(x_{c}) > \omega_{f}^+(x'_{c})$, we assign
$\xi(x'_{c})$ to the upper bound of the observation space, $\xi(x'_{c}) = \omega_{f}^+(x'_{c})$.
#+latex: \end{defn}

#+label: lemma:buffering-imagining
#+latex: \begin{lemma}
#+latex: \label{lemma:buffering-imagining}
If $S'$ is fixed-delay controllable after applying Lemmas [[lemma:main-tightening]], [[lemma:execution]],
and [[lemma:applied-execution]] to contingent event $Y$ with following requirement event $Z$, there is a
valid $\mathcal{S}$ for any observation in the observation space of $S$, $\omega_{v}(Y) = [a^-(Y),
b^+(Y)]$.
#+latex: \end{lemma}

#+latex: \begin{proof}
We first note the observation space of $S'$ is a subinterval of the original observation space of
$S$, $\omega_{f}(Y') \subset \omega_{v}(Y)$, and there are two distinct ranges of observations that
are not in $\omega_{f}(Y')$.

\begin{align*}
\omega_{f}(Y') &= [a + \gammabar^+(Y), b + \gammabar^-(Y)];~\omega_{v}(Y) = [a + \gammabar^-(Y), b + \gammabar^+(Y)] \\
\omega_{f}(Y') &\not\supset [a + \gammabar^-(Y), a + \gammabar^+(Y))~~(\textit{"Early" observations}) \\
\omega_{f}(Y') &\not\supset (b + \gammabar^+(Y), b + \gammabar^+(Y)]~~(\textit{"Late" observations})
\end{align*}

# TODO maybe remove?
# By Lemma [[lemma:applied-execution]], the full range of possible assignments to $Z'$ is,

# \begin{align*}
# \xi(Z') &= [a + \gammabar^+(Y), b + \gammabar^-(Y)] + [u - \gammabar^-(Y), v - \gammabar^+(Y)] \\
# \xi(Z') &= [a + u + (\gammabar^+(Y) - \gammabar^-(Y)), b + v]
# \end{align*}

# We do so by showing that by buffering an early observation
# to $\xi(Y') = a + \gammabar^+(Y)$, we have a valid $\mathcal{S}$. In fact, the execution strategy
# when $\xi(Y') = a + \gammabar^+(Y)$ is applicable to all early observations, $\obs(Y) = [a, a +
# (\gammabar^+(Y) - \gammabar^-(Y))$.

# TODO use < instead of leq?
We address the early observations first. The range of early assignments of $\xi(Y)$ in $S$ that we
care about are the ones that could produce an observation $\obs(Y) \leq a + \gammabar^+(Y)$, which
is $\xi(Y) = [a, a + (\gammabar^+(Y) - \gammabar^-(Y))]$. We rewrite the range of early assignments
as $\xi(Y) = a + (\gammabar^+(Y) - \gammabar^-(Y)) - \epsilon$, where $0 \leq \epsilon \leq
(\gammabar^+(Y) - \gammabar^-(Y))$. By the semantics of $S$, the range of assignments of $\xi(Z)$ is
then,

\begin{align*}
\xi(Z) &= [a + (\gammabar^+(Y) - \gammabar^-(Y)) - \epsilon, a + (\gammabar^+(Y) - \gammabar^-(Y)) - \epsilon] + [u, v] \\
\xi(Z) &= [a + u + (\gammabar^+(Y) - \gammabar^-(Y)) - \epsilon, a + v + (\gammabar^+(Y) - \gammabar^-(Y)) - \epsilon]
\end{align*}

The earliest assignment of $Y'$ in $S'$ is $\xi(Y') = a + \gammabar^+(Y)$. By the semantics of $S'$,
the range of assignments of $\xi(Z')$ is then,

\begin{align*}
\xi(Z') &= [a + \gammabar^+(Y), a + \gammabar^+(Y)] + [u - \gammabar^-(Y), v - \gammabar^+(Y)] \\
\xi(Z') &= [a + u + (\gammabar^+(Y) - \gammabar^-(Y)), a + v]
\end{align*}

We see that $\xi(Z') \subseteq \xi(Z)$ for any $\epsilon$, meaning the execution strategy when
$\xi(Y') = a + \gammabar^+(Y)$ results in a valid assignment of $\xi(Z)$ for all early observations
of $\xi(Y)$. We are safe to buffer early observations to $\xi(Y') = a + \gammabar^+(Y)$.

We use the same argument for imagining late observations. The range of late assignments of $\xi(Y)$
in $S$ that we care about are the ones that could produce an observation $\obs(Y) \geq b +
\gammabar^-(Y)$, which is $\xi(Y) = b - (\gammabar^+(Y) - \gammabar^-(Y)) + \epsilon$. By the
semantics of $S$, the range of assignments of $\xi(Z)$ is then,

\begin{align*}
\xi(Z) &= [b - (\gammabar^+(Y) - \gammabar^-(Y)) + \epsilon, b - (\gammabar^+(Y) - \gammabar^-(Y)) + \epsilon] + [u, v] \\
\xi(Z) &= [b + u - (\gammabar^+(Y) - \gammabar^-(Y)) + \epsilon, b + v - (\gammabar^+(Y) - \gammabar^-(Y)) + \epsilon]
\end{align*}

The last assignment of $Y'$ in $S'$ is $\xi(Y') = b + \gammabar^-(Y)$. By the semantics of $S'$,
the range of assignments of $\xi(Z')$ is then,

\begin{align*}
\xi(Z') &= [b + \gammabar^-(Y), b + \gammabar^+(Y)] + [u - \gammabar^-(Y), v - \gammabar^+(Y)] \\
\xi(Z') &= [b + u, b + v - (\gammabar^+(Y) - \gammabar^-(Y))]
\end{align*}

We see that $\xi(Z') \subseteq \xi(Z)$ for any $\epsilon$, meaning the execution strategy when
$\xi(Y') = b + \gammabar^-(Y)$ results in a valid assignment of $\xi(Z)$ for all late observations
of $\xi(Y)$. In practice, there is no reason to wait until after $\obs(Y) = b + \gammabar^-(Y)$ to
receive a late observation. As soon as we see the clock has reached $b + \gammabar^-(Y)$, we are
safe to imagine that $\obs(Y)$ has been received.
#+latex: \end{proof}

This concludes the modifications required to transform a contingent event $x_{c} \in X_{c}$ in $S$
to its equivalent $x'_{c} \in X_{c}$ in $S'$. What remains is to address the transformation of
requirement links, $x_{r} \in X_{r}$, in $S$ such that their transformed equivalents, $x'_{r} \in
X_{r}$ in $S'$, express the same execution semantics in $S'$ as they did in $S$. We will demonstrate
the correctness of the transformations after Lemma [[lemma:applied-execution]].

# TODO can we not change our notation here? it's very confusing
# FIXME NOTATION

#+label: lemma:execution
#+latex: \begin{lemma}
#+latex: \label{lemma:execution}
If we have contingent link $\conedge{X}{C}{}$ with duration $[l, u]$, outgoing requirement link
$\edge{C}{Z}{}$ with duration $[u, v]$ with an unobservable $C$, and contingent link
$\conedge{C}{Y}{}$ with range $[\gammabar^-(x_{c}), \gammabar^+(x_{c})]$, we can emulate the role of
the original requirement link during execution with a new link $\edge{Y}{Z}{}$ with bounds $[u -
max(\gammabar^-(x_{c}), XY - u), v - min(\gammabar^+(x_{c}), XY - l)]$, where $XY$ is the true
duration of $\conedge{X}{Y}{}$.
#+latex: \end{lemma}

#+latex: \begin{proof}
See Figure [[fig:lemmas-combined]]c for reference. From an execution perspective, $X$ and $Y$ are
the only events that can give us any information that we can use to reason about when to execute $Z$
(since $C$ is wholly unobservable).

If we execute $Z$ based on what we learn from $Y$, then we use our information from $Y$ to make
inferences about the true durations of $\conedge{X}{C}{}$ and $\conedge{C}{Y}{}$ based on
$\conedge{X}{Y}{}$. We know that the lower-bound of $\conedge{C}{Y}{}$ is at least $XY - b$ and that
its upper-bound is at most $XY - a$. But we also have the a priori bounds on the contingent link
that limit its range to $[\gammabar^-, \gammabar^+]$. Taken together, during execution we can infer
that the true bounds of $\conedge{C}{Y}{}$ are $[max(\gammabar^-, XY - b), min(\gammabar^+, XY -
a)]$. Since we have bounds only on $Z$'s execution in relation to $C$, we can then infer a
requirement link $\edge{Y}{Z}{}$ with bounds $[u - max(\gammabar^-, XY - b), v - min(\gammabar^-,
XY - a)]$.

If we try to execute $Z$ based on information we have about $X$, we must be robust to any possible
value assigned to $\conedge{X}{C}{}$. This means that we would be forced to draw a requirement link
$\edge{X}{Z}{}$ with bounds $[u+b, v+a]$. But we know that $u - max(\gammabar^-, XY - b) \leq u +
b - XY$ and $v - min(\gammabar^-, XY - a) \geq v + a - XY$, which means that the bounds we derived
from $Y$ are at least as expressive as the bounds that we would derive from $X$.
#+latex: \end{proof}

Since we have a local execution strategy that depends on the real value of $XY$, we can try to apply
this strategy to the contingent link that we restricted in Lemma \ref{lemma:main-tightening}, in
order to repair the remaining requirement links.

#+label: lemma:applied-execution
#+latex: \begin{lemma}
#+latex: \label{lemma:applied-execution}
If we have an outgoing requirement link $\edge{C}{Z}{}$ with duration $[u, v]$, where $C$ is a
contingent event, we can emulate the role of the original requirement link by replacing its bounds
with $[u - \gammabar^-(x_{c}), v - \gammabar^+(x_{c})]$.
#+latex: \end{lemma}

#+latex: \begin{proof}
See Figure [[fig:lemmas-combined]]d for reference. If we directly apply the transformation from Lemma
\ref{lemma:execution} and Figure [[fig:lemmas-combined]]c to our original STNU, we introduce complexity
through the need to reason over $min$ and $max$ operations in our link bounds. However, from Lemma
\ref{lemma:main-tightening}, we know that in a controllability evaluation context, it is acceptable
for us to simplify the $\conedge{X}{Y}{}$ link to a stricter range of $[a + \gammabar^+, b +
\gammabar^-]$, instead of $[a + \gammabar^-, b + \gammabar^+]$. This means that for the purpose of
evaluating controllability, we can assume $a + \gammabar^+ \leq XY \leq b + \gammabar^-$. When we
evaluate the requirement link $\edge{Y}{Z}{}$, we see $max(\gammabar^-, XY - b) = \gammabar^-$ and
$min(\gammabar^+, XY - a) = \gammabar^+$. This gives us bounds of $[u - \gammabar^-, v -
\gammabar^+]$ for the $\edge{Y}{Z}{}$ requirement link as seen in Figure [[fig:lemmas-combined]]d.
#+latex: \end{proof}

Lemma [[lemma:applied-execution]] handles outgoing requirement edges connected to contingent
events. In addition, we must handle incoming edges.

#+label: corollary:reversed
#+latex: \begin{corollary}
#+latex: \label{corollary:reversed}
If we have an incoming requirement link $\edge{Z}{C}{}$ with duration $[u, v]$, where $C$ is a
contingent event, we can replace the bounds of the original requirement link with $[u +
\gammabar^+(x_{c}), v + \gammabar^-(x_{c})]$.
#+latex: \end{corollary}

#+latex: \begin{proof}
A requirement link $\edge{Z}{C}{}$ with bounds $[u, v]$ can be immediately rewritten as its reverse
$\edge{C}{Z}{}$ with bounds $[-v, -u]$. After reversing the edge, we can apply Lemma
\ref{lemma:applied-execution} to get $\edge{Y}{Z}{}$ with bounds $[-v - \gammabar^-, -u -
\gammabar^+]$, which we can reverse again to get $\edge{Z}{Y}{}$ with bounds $[u + \gammabar^+, v +
\gammabar^-]$.
#+latex: \end{proof}

We can examine a concrete example of Lemmas [[lemma:main-tightening]], [[lemma:execution]], and
[[lemma:applied-execution]] to show equivalence in the transformation from Figure [[fig:lemmas-combined]]a
to [[fig:lemmas-combined]]d. We start by building an example of [[fig:lemmas-combined]]a. Let
$\conedge{X}{C}{[2, 5]}$ with $\gammabar(C) \in [1, 2]$ and $\edge{C}{Z}{[11, 20]}$. If we learn of
event $C$ at time 4, then one possibility is that the realized duration of $C$ could have been 2
with an observation delay of 2. In this case, event $Z$ must be executed in $[13, 22]$. However, if
the realized duration of $C$ were 3 with an observation delay of 1, then $Z$ would fall in $[14,
23]$. Given we cannot distinguish between the possibilities, we take the intersection of the
intervals, yielding $Z \in [14, 22]$. Likewise, if we learn of $C$ at time 6, then $C$ could have
been realized at time 5 with an observation delay of 1 or it could have been realized at time 4 with
an observation delay of 2. In the first case, $Z$ must then fall in $[16, 25]$, while in the second,
$Z$ would fall in $[15, 24]$. The intersection yields $[16, 24]$.

By the semantics represented in Figure [[fig:lemmas-combined]]d, we can build an equivalent network with
$\gamma(Y) = 0$ by setting $\conedge{X}{Y}{[4, 6]}$ and $\edge{Y}{Z}{[10, 18]}$. If $Y$ is observed
at time 4, $Z$ must be executed in $[14, 22]$. If $Y$ is observed at time 6, $Z$ then must be
executed in $[16, 24]$. The execution semantics for both cases match the equivalent networks from
[[fig:lemmas-combined]]a described above.

** Discussion

We have demonstrated a modeling formalism to describe temporal networks with uncertain observation
delay, along with a sound and complete procedure for checking controllability of said temporal
networks. VDC is sound because if it finds that $S'$ has a valid execution strategy, then it must
also be the case that $S$ has an execution strategy. VDC is complete because if it finds that $S'$
is not controllable, then there exists a projection of $S$ that is uncontrollable, thus $S$ is not
variable-delay controllable.

# TODO O(N^3)?

** Experimental Analysis
<<sec:vdc-experimental>>

In this section, we provide empirical evaluations of our variable-delay controllability checking
algorithms, showing that variable-delay controllability gives us a level of modeling expressiveness
that cannot be captured by approximations that use delay controllability alone. We do so by
constructing examples of variable-delay STNUs for realistic multi-agent coordination scenarios that
are taken from the domain of planetary exploration, inspired by the real decision-making processes
during Apollo EVAs and modern day EVA operations research. First, we briefly describe the
operational environment, relevant actors, and decisions in EVAs. We then provide a selection of
STNUs that reflect the activities and temporal constraints of planetary exploration. Using these
building blocks, we make a case for the expressivity of VDC in modeling uncertain communication,
then generate larger STNUs to demonstrate the soundness of variable-delay controllability
checking.[fn:: The implementation of the experiments herein can be found at
[[https://gitlab.com/mit-mers/delay-stnu-benchmarks][[https://gitlab.com/mit-mers/delay-stnu-benchmarks]]].]

#+label: fig:sbt-stnu
#+attr_latex: :width 1\textwidth
#+caption: An STNU representing an EVA sampling task. The episode durations are representative of the bounds used in simulation. The depiction of this STNU with variable-delay is presented with rows representing actors to clarify the context of each event.
file:../images/eva-stnu.png

Now, we present a sample collection communication scenario in Figure [[fig:sbt-stnu]] that is
representative of the types of activities performed during exploration and requires uncertain
communication delay to faithfully model.

At a high level, in this activity a crew of $i$ astronauts perform $j$ activities of scanning
potential samples and receiving feedback from the science team as to whether they should store or
discard those sample. Scanning requires liberating, that is chipping away, a piece of rock from an
outcrop, $A_{i,j}$, and performing a scan of the newly exposed surface with a handheld spectrometer.
Spectroscopy data is eventually received at $X_{i,j}$; we model this duration of this process with
the contingent link $\conedge{A_{i,j}}{X_{i,j}}{}$ where $X_{i,j}$ is uncontrollable because the
time to liberate and scan is a function of the environment (eg. how hard the sample is to access),
not the crew. The processing completion time of the handheld spectrometer is highly variable, and as
such we have $\gammabar({X_{i,j}})$ represent a variable delay in receiving the results of the scan.
Interestingly, note that the general time of $A_{i,j}$ will be known immediately through the use of
audio and video communications - the variability of $X_{i,j}$ refers to the delay of receiving the
spectroscopy data itself.

During a narrow window of opportunity between the receipt of the sample information and a deadline
imposed by Mission Control, $P_{i,j}$, the science team must confer and decide on a sample
collection priority list to send to Mission Control, $\edge{X_{i,j}}{P_{i,j}}{}$. Even once Mission
Control has a sample priority list in hand, $P_{i,j}$, due to health and safety concerns, they may
prioritize other messages before they send the science team's sampling priority decision to the
crew. As such, the message passing process, $\conedge{P_{i,j}}{B_{i,j}}{}$, is modeled as
uncontrolled with a variable communication delay. Once the crew receives the priority list, $B$,
they then stow the requested amount of samples at $C_{i,j}$. Then the astronaut traverses to the
next location and the procedure repeats anew. We use $\conedge{C_{i,j}}{A_{i,j+1}}{}$ to model the
time needed to traverse to the site of the next activity. We apply a requirement link with a
lower-bound of 0 and an upper bound of the limiting consumable from the overall start of each STNU
to its overall end after each astronaut has completed all activities.

With realistic STNUs in hand, we can now evaluate the performance of our variable-delay
formulations. For the simulations presented in subsequent sections, we generated STNUs that follow
the form of Figure [[fig:sbt-stnu]] with randomized bounds on the links and delay functions, as will be
described below.

#+label: table:comparison
#+begin_export tex
\begin{table*}[t]
\centering
\begin{tabular}{ |>{\centering\arraybackslash} m{4.4cm}||>{\centering\arraybackslash} m{4.5cm}|>{\centering\arraybackslash} m{5.0cm}|  }
 \hline
 & Variable-delay controllable & Variable-delay uncontrollable\\
 \hline
 \hline
 Min-fixed controllable & 222 & 619\\
 \hline
 Min-fixed uncontrollable & 0 & 159\\
 \hline
 \hline
 Mean-fixed controllable & 222 & 583\\
 \hline
 Mean-fixed uncontrollable & 0 & 195\\
 \hline
 \hline
 Max-fixed controllable & 222 & 355\\
 \hline
 Max-fixed uncontrollable & 0 & 423\\
 \hline
\end{tabular}
\caption{Variable-delay vs. minimum, mean, and maximum fixed-delay controllability results with the parallel installation STNU from Figure \ref{fig:dish-stnu}.}
\label{table:comparison}
\end{table*}
#+end_export

We now will evaluate the comparative quality of variable-delay formulations against fixed-delay
approximations by using the repeater installation scenario seen in Figure [[fig:dish-stnu]]. We
generate STNUs with four astronauts each performing five installations. We set the lower bounds of
$\conedge{A_{i,j}}{B_{i,j}}{}$ to 0 and choose the upper bounds from a uniform distribution of
integers between 0 and 20, $\mathcal{U}_{[0, 20]}$. There is no delay function for $B_{i,j}$.
Likewise, for $\edge{B_{i,j}}{C_{i,j}}{}$, we set the lower bounds to 0 and choose an integer upper
bound in $\mathcal{U}_{[0, 15]}$. $\conedge{C_{i,j}}{D_{i,j}}{}$ has a lower bound of 0 and an upper
bound integer chosen in $\mathcal{U}_{[0, 20]}$. The variable-delay function $\gamma(D_{i,j})$ has a
lower bound of 0 and upper-bound chosen from the exponential distribution $f(t) = \lambda
e^{-\lambda t}$ with $\lambda = 3$. $\conedge{D_{i,j}}{A_{i,j+1}}{}$ takes a lower bound integer,
$a$, from $\mathcal{U}_{[10, 20]}$ and its upper bound in $a + \mathcal{U}_{[4, 10]}$. Lastly, we
pick a random limiting consumable as the multiple of the number of activities and an integer from
$\mathcal{U}_{[50, 60]}$.

We employ three different strategies for each $\gamma(x_c)$ in $S$ for our fixed-delay
approximations: $\gamma(x_c) = \gammabar^-(x_c)$, $\gamma(x_c) = \frac{\gammabar^- +
\gammabar^+}{2}$, and $\gamma(x_c) = \gammabar^+(x_c)$. For each strategy, we know that whenever the
original STNU is variable-delay controllable with respect to $\gammabar$, it is also fixed-delay
controllable with respect to $\gamma$. Each choice of $\gamma$ represents a potential realization of
the delays offered by $\gammabar$, and the fixed-delay approximation has the added benefit of
eliminating uncertainty in observation.

We generate 1000 different STNUs and compare the variable-delay controllability results to the
different fixed-delay controllability approaches (Table [[table:comparison]]). Note that our randomly
generated variables, notably the choice of $\gamma(C_{i,j})$ and the width of the following
$\edge{C_{i,j}}{D_{i,j}}{}$ link, were selected such that the STNUs generated could be
variable-delay, fixed-delay, dynamic, or strong controllable, or uncontrollable. The instances that
are of greatest interest are those where the STNU is not variable-delay controllable but the
fixed-delay approximations determine it to be controllable.

This false positive rate of the minimum fixed-delay controllability approximation is quite high at
80.0%. The mean and maximum fixed-delay approximations have more reasonable false positive rates at
74.9% and 45.6% respectively. Since all approximations yield the correct answer when the original
STNU is variable-delay controllable, it follows that the maximum fixed-delay approximation has the
lowest false positive rate, as it is the most demanding of the three.

We note that these results are dependent on the width of the variable-delay ranges found in the
network. We can increase the likelihood that a delay takes longer by increasing the choice of
$\lambda$ in our exponential delay function. When we vary our delay function using $\lambda = 4.5,
6, 7.5$, and $9$, the false positives of the max-delay approximation are 27.9% 12.9%, 7.0%, and
3.1%, respectively.

In addition to simulating the network using fixed-delays, we also consider the effect of combining
the two sources of uncertainty, the duration of the action and the delay in observation, into one
new source of uncertainty. Unlike the fixed-delay approximations, we know that if a network under
this transformation is controllable, then so too is the original network, as this approach discards
any existing knowledge about the difference in uncertainties between the original event and the
observation of that event.

#+label: table:comparison-elongated
#+begin_export tex
\begin{table*}[t]
\centering
\begin{tabular}{ |>{\centering\arraybackslash} m{4.4cm}||>{\centering\arraybackslash} m{4.5cm}|>{\centering\arraybackslash} m{5.0cm}|  }
 \hline
 & Variable-delay controllable & Variable-delay uncontrollable\\
 \hline
 \hline
 Elongated controllable & 36 & 0\\
 \hline
 Elongated uncontrollable & 186 & 778\\
 \hline

\end{tabular}
\caption{Variable-delay controllability vs. the controllability of a network that elongates its contingent links to account for observational uncertainty when using an exponential delay function with $\lambda = 3$.}
\label{table:comparison-elongated}
\end{table*}
#+end_export

As seen in Table [[table:comparison-elongated]], this approach yields no false positives, but still
presents a modestly high false negative rate of 19.3%. An appropriate approximation strategy can be
adopted to prevent either false positives or false negatives; however, such a wide disparity in
results strongly reinforces the value of modeling observational uncertainty directly.
